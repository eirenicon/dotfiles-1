"
" Plugins and related settings
"
call plug#begin('~/.vim/plugins')
let g:plug_window = "above new"

    " A status line replacement with more info
    " (Powerline patched fonts require manual install.)
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
set noshowmode
let g:airline_powerline_fonts = 0
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_theme='base16'
let g:airline#extensions#tabline#enabled = 0
let g:airline#extensions#tabline#show_buffers = 0

    " Enhances Vim's motion keys: <leader><leader>{w,b,e,f,t, etc}
Plug 'easymotion/vim-easymotion'
let g:EasyMotion_startofline = 0
let g:EasyMotion_smartcase = 1

    " Filesystem explorer
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeFind' }
nnoremap <leader>f :NERDTreeFind<CR>

    " Quickly (un)comment code <leader> c {space, i, c, ...}
Plug 'scrooloose/nerdcommenter'

    " Asynchronous code linting
Plug 'w0rp/ale'
" Suppresses 'No library stub file for module X' errors
let g:ale_python_mypy_options = '--ignore-missing-imports'

    " Multiple cursors (a la Sublime Text)
Plug 'terryma/vim-multiple-cursors'

    " Code/semantic completion
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --system-libclang --clang-completer' }

    " A sidebar that shows functions, members, etc.
Plug 'majutsushi/tagbar'
let g:tagbar_autoclose = 1
let g:tagbar_autofocus = 1
nnoremap <leader>tb :TagbarToggle<CR>

    " Explore Vim's history of a file and revert to old versions
Plug 'sjl/gundo.vim', { 'on': 'GundoToggle' }
nnoremap <leader>u :GundoToggle<CR>
let g:gundo_preview_bottom = 1

    " Fuzzy search to jump to files, buffers, tags, etc.
Plug 'ctrlpvim/ctrlp.vim'
nnoremap <leader>pT :CtrlPTag<CR>
nnoremap <leader>pb :CtrlPBuffer<CR>
nnoremap <leader>pm :CtrlPMRUFiles<CR>
nnoremap <leader>pc :CtrlPChange<CR>
nnoremap <leader>pt :CtrlPBufTag<CR>
let g:ctrlp_show_hidden = 1

    " Fuzzy search for shell history and the filesystem
    " (Managed by vim-plug for simplicity)
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

    " Pad text with whitespace to align certain characters across lines
Plug 'junegunn/vim-easy-align'
    " Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)
    " Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap <leader>A <Plug>(EasyAlign)

    " Automatically clears search, doesn't move *-search cursor
Plug 'junegunn/vim-slash'

    " Highlights all search matches, not just the first
Plug 'haya14busa/incsearch.vim'
nmap /  <Plug>(incsearch-forward)
nmap ?  <Plug>(incsearch-backward)
nmap g/ <Plug>(incsearch-stay)

    " Switch between header and source files
Plug 'derekwyatt/vim-fswitch'
nnoremap <leader>a :FSHere<CR>

    " Vim front end for ack, retrofitted for ag/rg
    " (ag.vim has been deprecated by it's maintainer)
Plug 'mileszs/ack.vim'
let g:ackprg = 'rg --vimgrep --smart-case'
nnoremap <leader>* * :AckFromSearch!<CR>
nnoremap <leader>/ :Ack!<Space>

    " Provides hg/git change status in the left gutter
Plug 'mhinz/vim-signify'

    " Show indent levels
Plug 'nathanaelkane/vim-indent-guides', { 'on': 'IndentGuidesToggle' }
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
nnoremap <leader>ig :IndentGuidesToggle<CR>

    " Colorschemes
"Plug 'flazz/vim-colorschemes'
Plug 'chriskempson/base16-vim'

    " Syntax highlighting for a ton of languages
Plug 'sheerun/vim-polyglot'
let g:polyglot_disabled = ['python']
Plug 'vim-python/python-syntax'
let g:python_highlight_all = 1

    " Improved Vim session management
Plug 'tpope/vim-obsession'

    " Commands for modifying quotes, brackets, etc.
Plug 'tpope/vim-surround'

    " Supercharged substitute (:S///)
Plug 'tpope/vim-abolish'

    " Browse and manage open buffers
Plug 'jlanzarotta/bufexplorer'

    " :BufOnly deletes all but the current buffer
Plug 'vim-scripts/BufOnly.vim', { 'on': 'BufOnly' }

    " Spawns a new command line that previews s/// in real-time
Plug 'osyo-manga/vim-over', { 'on': 'OverCommandLine' }

    " Start menu replacement when opening Vim without a filename
Plug 'mhinz/vim-startify'

    " A slightly less demanding 'hardmode'
Plug 'takac/vim-hardtime'
autocmd VimEnter * silent! call HardTimeOn()
let g:hardtime_allow_different_key = 1
let g:hardtime_ignore_quickfix = 1
let g:hardtime_maxcount = 5

    " The notorious git plugin
Plug 'tpope/vim-fugitive'

    " Quickly google search from vim
Plug 'szw/vim-g'
nnoremap <leader>G yiw:Googlef <C-r>"

    " <leader>ww, select window to swap, <leader>ww again to swap
Plug 'wesQ3/vim-windowswap'

    " Only used for AccordionStop, which evenly spaces current splits
Plug 'mattboehm/vim-accordion', { 'on': 'AccordionStop' }
nnoremap <leader>B :AccordionStop<CR>

    " :DetectIndent tries to match vim whitespace settings to the given file
Plug 'ciaranm/detectindent', { 'on': 'DetectIndent' }

    " Automatically find VCS (et. al.) dirs and cd to project root
Plug 'airblade/vim-rooter'

call plug#end()
