-- vim: set ft=lua:

function run_cmd(cmd, raw)
  local f = assert(io.popen(cmd, 'r'))
  local s = assert(f:read('*a'))
  f:close()
  if raw then return s end
  s = string.gsub(s, '^%s+', '')
  s = string.gsub(s, '%s+$', '')
  s = string.gsub(s, '[\n\r]+', ' ')
  return s
end

local xrandr = run_cmd('cat /tmp/xrandr.txt')
local screen_width = string.match(xrandr, 'current (%d+)')
local mon_width  = ''
local mon_offset = ''
mon_width, mon_offset = string.match(xrandr, 'primary (%d+)x%d+%+(%d+)')
local xpos=(screen_width - (mon_width + mon_offset - 14))
print(screen_width, mon_width, mon_offset, xpos)

conky.config = {
    font = 'Envy Code R:size=8',
    use_xft = true,
    out_to_x = true,
    out_to_console = false,
    background = true,
    own_window = true,
    own_window_class = 'conky_mem',
    own_window_type = 'panel',
    double_buffer = true,
    own_window_colour = '32383f',
    default_color = 'c5c8c6',
    color1 = '0088cc',
    draw_shades = false,
    update_interval = 3,
    top_name_width = 40,
    minimum_width = 400,
    alignment = 'top_right',
    gap_x = xpos,
    gap_y = 32,
}

conky.text = [[
Memory${alignr}${mem} / ${memmax} (${memperc}%)
Easy Free${alignr}${memeasyfree}
${memgraph 0088cc 0088cc}
${top_mem name 1}${alignr}${top_mem pid 1}  ${alignr}${top_mem mem_res 1}
${top_mem name 2}${alignr}${top_mem pid 2}  ${alignr}${top_mem mem_res 2}
${top_mem name 3}${alignr}${top_mem pid 3}  ${alignr}${top_mem mem_res 3}
${top_mem name 4}${alignr}${top_mem pid 4}  ${alignr}${top_mem mem_res 4}
${top_mem name 5}${alignr}${top_mem pid 5}  ${alignr}${top_mem mem_res 5}]]
